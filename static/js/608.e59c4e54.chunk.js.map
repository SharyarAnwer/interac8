{"version":3,"file":"static/js/608.e59c4e54.chunk.js","mappings":"uQAkBe,SAASA,IAMtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAsCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,GAAFD,EAAA,GAAgBA,EAAA,IAClCE,GAAoCR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA3CE,EAAQD,EAAA,GAAEE,EAAeF,EAAA,IAEhCG,EAAAA,EAAAA,YAAU,WAIRC,EAAAA,EACGC,IAHD,wEAICC,MAAK,SAACC,GACLZ,EAASY,EAASC,MAClBV,EAAeJ,EAAMe,OACvB,IACCC,OAAM,SAACC,GACNT,EACE,2DAEJ,GACJ,GAAG,IAeH,IAAAU,GAAoCrB,EAAAA,EAAAA,UAASsB,MAAM,GAAGC,MAAK,IAAOC,GAAAtB,EAAAA,EAAAA,GAAAmB,EAAA,GAA3DI,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAI1BG,EAAkB,SAACC,GACvBF,GAAc,SAACG,GACb,IAAMC,GAAiBC,EAAAA,EAAAA,GAAOF,GAE9B,OADAC,EAAkBF,IAAUE,EAAkBF,GACvCE,CACT,GACF,EAEA,OACEE,EAAAA,EAAAA,KAAA,OAAAC,SACe,MAAZvB,GACCwB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2BAA0BH,SAAA,EACvCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACJD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4BAEjBJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,2BAA0BH,SAEtC9B,EAAMe,OAAS,EACdf,EAAMkC,KAAI,SAACC,EAASV,GAClB,IAEIW,EAFAC,EAlClB,SAAoBC,GAClB,IAAMC,EAAa,IAAIC,KAAKF,GACtBG,EAAMF,EAAWG,UACjBC,EAAQJ,EAAWK,WAAa,EAChCC,EAAON,EAAWO,cAExB,MAAM,GAANC,OAAUN,EAAG,KAAAM,OAAIJ,EAAK,KAAAI,OAAIF,EAC5B,CA2ByBG,CAAWb,EAAQE,MAI9B,IAEED,EACED,EAAQc,UAAU,oBAAoB,GAAGC,cAAcC,MACpDC,aAAaC,UACpB,CAAE,MAAOpC,GACPmB,EAAmB,8GACrB,CAEA,OACEL,EAAAA,EAAAA,MAAA,OAAiBE,UAAU,sBAAqBH,SAAA,EAC9CD,EAAAA,EAAAA,KAAA,OACEI,UAAU,4BACVqB,MAAO,CAAEC,gBAAgB,OAADR,OAASX,EAAgB,SAGnDL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2BAA0BH,SAAA,CAAC,cAC5BO,MAGdR,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4BAA2BH,UACxCD,EAAAA,EAAAA,KAAA,MAAAC,SAAKK,EAAQqB,MAAMC,cAGrB1B,EAAAA,EAAAA,MAAA,OACEE,UAAS,+BAAAc,OACPzB,EAAWG,GAAS,WAAa,IAChCK,SAAA,EAEHD,EAAAA,EAAAA,KAAA,QACE6B,wBAAyB,CACvBC,OAAO,GAADZ,OACHzB,EAAWG,GAERU,EAAQyB,QAAQH,SADhBtB,EAAQ0B,QAAQJ,aAMxBnC,EAAWG,IAUXI,EAAAA,EAAAA,KAACiC,EAAAA,IAAiB,CAChBC,MAAO,UACPC,KAAM,GACN/B,UAAU,iBACVgC,QAAS,WACPzC,EAAgBC,EAClB,KAfFI,EAAAA,EAAAA,KAACqC,EAAAA,IAAgB,CACfH,MAAO,UACPC,KAAM,GACN/B,UAAU,iBACVgC,QAAS,WACPzC,EAAgBC,EAClB,QAcNI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BH,UACzCD,EAAAA,EAAAA,KAAA,UAAAC,UACEC,EAAAA,EAAAA,MAACoC,EAAAA,GACC,CACAC,GAAE,uBAAArB,OAAyBZ,EAAQqB,MAAMC,UACzCY,OAAO,SAAQvC,SAAA,CAChB,kBACiB,KAChBD,EAAAA,EAAAA,KAACyC,EAAAA,IAAW,CAACP,MAAO,OAAQC,KAAM,cA1DhCvC,EAgEd,KAEAI,EAAAA,EAAAA,KAAA,MAAAC,SACe,MAAZvB,GASCsB,EAAAA,EAAAA,KAAC0C,EAAAA,GAAY,CACXC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPX,MAAM,UACNY,UAAU,UACVC,cAAY,EACZC,cAAY,KAGdhD,EAAAA,EAAAA,KAACiD,EAAAA,IAAgC,CAC/Bf,MAAO,UACPC,KAAM,cAQlBnC,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,KAIR,C,wBCtLe,SAAS+C,IACtB,IAAAnF,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,GAAoCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CK,EAAQJ,EAAA,GAAEK,EAAeL,EAAA,IAEhCM,EAAAA,EAAAA,YAAU,WAIRC,EAAAA,EACGC,IAHD,qFAICC,MAAK,SAACC,GACLZ,EAASY,EAASC,MAClBkE,QAAQC,IAAIpE,EAASC,KAAKC,QAC1BiE,QAAQC,IAAIpE,EAASC,KAAK,IAC1BkE,QAAQC,IAAIpE,EAASC,KAAK,IAC1BkE,QAAQC,IAAIpE,EAASC,KAAK,GAC5B,IACCE,OAAM,SAACC,GACNT,EACE,2DAEJ,GACJ,GAAG,IAEH,IAAM0E,EAAc,SAAC7C,GAOnB,OANgB,IAAIG,KAAKH,GAIK8C,mBAAmB,QADjC,CAAE1C,IAAK,UAAWE,MAAO,UAAWE,KAAM,WAI5D,EAEA,OACEhB,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAF,SACe,MAAZvB,GACCwB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sCAAqCH,SAAA,EAClDC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBH,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4BAGjBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uCAAsCH,SAAA,CAClD9B,EAAM,IAAMA,EAAM,GAAGiD,UAAU,oBAAoB,KAClDlB,EAAAA,EAAAA,MAACoC,EAAAA,GAAI,CACHC,GAAE,mBAAArB,OAAqB/C,EAAM,GAAGoF,IAChC9B,MAAO,CACLC,gBAAgB,OAADR,OACb/C,EAAM,GACFA,EAAM,GAAGiD,UAAU,oBAAoB,GAAGC,cACvCC,MAAMkC,KAAKhC,WACd,2HAA0H,KAEhIoB,MAAO,QAETxC,UAAU,6CAA4CH,SAAA,EAEtDD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeH,UAC5BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBAGND,EAAAA,EAAAA,KAAA,MAAAC,SAAK9B,EAAM,IAAMkF,EAAYlF,EAAM,GAAGqC,SAEtCR,EAAAA,EAAAA,KAACyD,EAAAA,IAAgB,CACfrD,UAAU,iBACV8B,MAAM,OACNC,KAAM,MAGRnC,EAAAA,EAAAA,KAAA,KAAAC,SAAI9B,EAAM,GAAGuF,OAAOC,QAAQ,GAAGC,WAIlCzF,EAAM,IAAMA,EAAM,GAAGiD,UAAU,oBAAoB,KAClDlB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8CAA6CH,SAAA,EAC1DC,EAAAA,EAAAA,MAACoC,EAAAA,GAAI,CACHC,GAAE,mBAAArB,OAAqB/C,EAAM,GAAGoF,IAChC9B,MAAO,CACLC,gBAAgB,OAADR,OACb/C,EAAM,GACFA,EAAM,GAAGiD,UAAU,oBAAoB,GACpCC,cAAcC,MAAMC,aAAaC,WACpC,2HAA0H,MAGlIpB,UAAU,yDAAwDH,SAAA,EAElED,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeH,UAC5BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBAGND,EAAAA,EAAAA,KAAA,MAAAC,SAAK9B,EAAM,IAAMkF,EAAYlF,EAAM,GAAGqC,SAEtCR,EAAAA,EAAAA,KAACyD,EAAAA,IAAgB,CACfrD,UAAU,iBACV8B,MAAM,OACNC,KAAM,MAGRnC,EAAAA,EAAAA,KAAA,KAAAC,SAAI9B,EAAM,GAAGuF,OAAOC,QAAQ,GAAGC,WAGhCzF,EAAM,IAAMA,EAAM,GAAGiD,UAAU,oBAAoB,KAClDlB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0DAAyDH,SAAA,EACtEC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8DAA6DH,SAAA,EAC1ED,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeH,UAC5BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBAGND,EAAAA,EAAAA,KAAA,MAAAC,SAAK9B,EAAM,IAAMkF,EAAYlF,EAAM,GAAGqC,SAEtCR,EAAAA,EAAAA,KAACyD,EAAAA,IAAgB,CACfrD,UAAU,iBACV8B,MAAM,OACNC,KAAM,MAGRnC,EAAAA,EAAAA,KAAA,KAAAC,SAAI9B,EAAM,GAAGuF,OAAOC,QAAQ,GAAGC,WAGhCzF,EAAM,IAAMA,EAAM,GAAGiD,UAAU,oBAAoB,KAClDlB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8DAA6DH,SAAA,EAC1EC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAeH,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACJD,EAAAA,EAAAA,KAAC6D,EAAAA,IAAe,CACd3B,MAAM,OACNC,KAAM,GACN/B,UAAU,uBAIdJ,EAAAA,EAAAA,KAAA,MAAAC,SAAK9B,EAAM,IAAMkF,EAAYlF,EAAM,GAAGqC,SAEtCR,EAAAA,EAAAA,KAACyD,EAAAA,IAAgB,CACfrD,UAAU,iBACV8B,MAAM,OACNC,KAAM,MAGRnC,EAAAA,EAAAA,KAAA,KAAAC,SAAI9B,EAAM,GAAGuF,OAAOC,QAAQ,GAAGC,wBAU/C5D,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAF,UACEC,EAAAA,EAAAA,MAAA,OACEuB,MAAO,CACLqC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,QAAS,QACTjE,SAAA,EAEFD,EAAAA,EAAAA,KAACiD,EAAAA,IAAgC,CAACf,MAAO,UAAWC,KAAM,OAC1DnC,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mEAMhB,CCxKe,SAASkE,IAEtB,OACEjE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uBAAsBH,SAAA,EACnCD,EAAAA,EAAAA,KAACoE,EAAAA,EAAM,KAEPpE,EAAAA,EAAAA,KAACkD,EAAkB,KAEnBlD,EAAAA,EAAAA,KAAClC,EAAQ,KAETkC,EAAAA,EAAAA,KAACqE,EAAAA,EAAM,MAGb,C","sources":["components/blog-page-components/Blog-main/BlogMain.js","components/blog-page-components/Featured-blog-page/FeaturedBlogBanner.js","blog/Blog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./BlogMain.css\";\r\n\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\n\r\nimport { AiFillMinusCircle } from \"react-icons/ai\";\r\n\r\nimport { MdOpenInNew } from \"react-icons/md\";\r\n\r\nimport { MdSignalWifiConnectedNoInternet0 } from \"react-icons/md\";\r\n\r\nimport { InfinitySpin } from \"react-loader-spinner\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function BlogMain() {\r\n  // This piece of code fetches the post from wordpress and saves it in the variable post.\r\n  // Axios is a third party package that was used to fetch the data from wordpress.\r\n  // Data from wordpress is coming in form of an array which contains object. Each object is a single wordpress post.\r\n  //You can run this \"https://dev-interac8digital.pantheonsite.io/wp-json/wp/v2/posts\" in thunder client to see the response we are getting from wordpress\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [postsLength, setPostsLength] = useState(0);\r\n  const [errorMsg, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let url =\r\n      \"https://www.interac8digital.com/wordpress/wp-json/wp/v2/posts?_embed\";\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n        setPostsLength(posts.length);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(\r\n          \"Cannot load blogs. You are not connected to the internet\"\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  // Wordpress API sends us the date in this format: \"2023-07-24T11:50:07\".\r\n  //We want date to be in this format: \"24/7/2023\"\r\n  //So the \"formatDate\" function will convert \"2023-07-24T11:50:07\" to \"24/7/2023\"\r\n  function formatDate(apiDate) {\r\n    const dateObject = new Date(apiDate);\r\n    const day = dateObject.getDate();\r\n    const month = dateObject.getMonth() + 1; // Months are zero-indexed, so we add 1 to get the correct month number\r\n    const year = dateObject.getFullYear();\r\n\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  // Create an array of boolean values to track the expansion state of each card\r\n  const [expansions, setExpansions] = useState(Array(5).fill(false));\r\n\r\n  // Function to toggle the expansion state of a specific card. This piece of code makes sure that only the card which is clicked will open or close. Rest of the cards will not change.\r\n  //Code was copied from chatGPT, so good luck understanding it because I don't understand it either.\r\n  const toggleExpansion = (index) => {\r\n    setExpansions((prevExpansions) => {\r\n      const updatedExpansions = [...prevExpansions];\r\n      updatedExpansions[index] = !updatedExpansions[index];\r\n      return updatedExpansions;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {errorMsg == null ? (\r\n        <>\r\n          <div className=\"blog-card-featured-posts\">\r\n            <h1>All Posts</h1>\r\n            <div className=\"featured-posts-line\"></div>\r\n          </div>\r\n          <div className=\"blog-card-main-container\">\r\n            {/* posts.map will take the array of Posts and it will go through each item in the array. So, for example, if you get 4 posts from wordpress, the loop will automatically run 4 times and will print 4 cards along with their information. */}\r\n            {posts.length > 0 ? (\r\n              posts.map((element, index) => {\r\n                let date = formatDate(element.date);\r\n\r\n                let featuredImageUrl;\r\n\r\n                try {\r\n                  // Extract the featured image URL\r\n                  featuredImageUrl =\r\n                    element._embedded[\"wp:featuredmedia\"][0].media_details.sizes\r\n                      .medium_large.source_url;\r\n                } catch (error) {\r\n                  featuredImageUrl = \"https://res.cloudinary.com/dx3u24xir/image/upload/f_auto,q_auto/v1692792848/Blogs/Blog-Mian/test_qan15z.webp\";\r\n                }\r\n\r\n                return (\r\n                  <div key={index} className=\"blog-card-container\">\r\n                    <div\r\n                      className=\"blog-card-container-image\"\r\n                      style={{ backgroundImage: `url(${featuredImageUrl})` }}\r\n                    ></div>\r\n\r\n                    <div className=\"blog-card-container-date\">\r\n                      Posted on: {date}\r\n                    </div>\r\n\r\n                    <div className=\"blog-card-container-title\">\r\n                      <h2>{element.title.rendered}</h2>\r\n                    </div>\r\n\r\n                    <div\r\n                      className={`blog-card-container-content ${\r\n                        expansions[index] ? \"expanded\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <span\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: `${\r\n                            !expansions[index]\r\n                              ? element.excerpt.rendered\r\n                              : element.content.rendered\r\n                          }`,\r\n                        }}\r\n                      ></span>\r\n\r\n                      {!expansions[index] ? (\r\n                        <AiFillPlusCircle\r\n                          color={\"#612d91\"}\r\n                          size={30}\r\n                          className=\"blog-plus-sign\"\r\n                          onClick={() => {\r\n                            toggleExpansion(index); // Call the toggleExpansion function with the index of the clicked card\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <AiFillMinusCircle\r\n                          color={\"#612d91\"}\r\n                          size={30}\r\n                          className=\"blog-plus-sign\"\r\n                          onClick={() => {\r\n                            toggleExpansion(index); // Call the toggleExpansion function with the index of the clicked card\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"blog-card-container-button\">\r\n                      <button>\r\n                        <Link\r\n                          // to={`/blog-article?id=${element.id}`}\r\n                          to={`/blog-article?title=${element.title.rendered}`}\r\n                          target=\"_blank\"\r\n                        >\r\n                          Open in new tab{\" \"}\r\n                          <MdOpenInNew color={\"#fff\"} size={20} />\r\n                        </Link>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <h1>\r\n                {errorMsg == null ? (\r\n                  // <ClipLoader\r\n                  //   color={color}\r\n                  //   loading={loading}\r\n                  //   cssOverride={override}\r\n                  //   size={150}\r\n                  //   aria-label=\"Loading Spinner\"\r\n                  //   data-testid=\"loader\"\r\n                  // />\r\n                  <InfinitySpin\r\n                    height=\"80\"\r\n                    width=\"80\"\r\n                    radius=\"9\"\r\n                    color=\"#612d91\"\r\n                    ariaLabel=\"loading\"\r\n                    wrapperStyle\r\n                    wrapperClass\r\n                  />\r\n                ) : (\r\n                  <MdSignalWifiConnectedNoInternet0\r\n                    color={\"#612d91\"}\r\n                    size={100}\r\n                  />\r\n                )}\r\n              </h1>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./FeaturedBlogBanner.css\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { BiRightArrowAlt } from \"react-icons/bi\";\r\n\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { MdSignalWifiConnectedNoInternet0 } from \"react-icons/md\";\r\n\r\nexport default function FeaturedBlogBanner() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const [errorMsg, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let url =\r\n      \"https://www.interac8digital.com/wordpress/wp-json/wp/v2/posts?_embed&categories=3\";\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n        console.log(response.data.length);\r\n        console.log(response.data[0]);\r\n        console.log(response.data[1]);\r\n        console.log(response.data[2]);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(\r\n          \"Cannot load blogs. You are not connected to the internet\"\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const convertDate = (date) => {\r\n    const isoDate = new Date(date);\r\n\r\n    // Format the date in the desired format\r\n    const options = { day: \"numeric\", month: \"numeric\", year: \"numeric\" };\r\n    const formattedDate = isoDate.toLocaleDateString(\"en-US\", options);\r\n\r\n    return formattedDate;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {errorMsg == null ? (\r\n        <div className=\"featured-blog-banner-main-container\">\r\n          <div className=\"featured-posts\">\r\n            <h1>Featured Posts</h1>\r\n            <div className=\"featured-posts-line\"></div>\r\n          </div>\r\n\r\n          <div className=\"featured-blog-banner-inner-container\">\r\n            {posts[0] && posts[0]._embedded[\"wp:featuredmedia\"][0] && (\r\n              <Link\r\n                to={`/blogNewPage?id=${posts[0].id}`}\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    posts[0]\r\n                      ? posts[0]._embedded[\"wp:featuredmedia\"][0].media_details\r\n                          .sizes.full.source_url\r\n                      : \"https://res.cloudinary.com/dx3u24xir/image/upload/f_auto,q_auto/v1692792133/Blogs/Featured-Blog-Banner/Book1_avjadw.webp\"\r\n                  })`,\r\n                  width: \"100%\",\r\n                }}\r\n                className=\"featured-blog-banner-inner-container-first\"\r\n              >\r\n                <div className=\"read-more-div\">\r\n                  <h2>Read more...</h2>\r\n                </div>\r\n\r\n                <h4>{posts[0] && convertDate(posts[0].date)}</h4>\r\n\r\n                <FaRegCommentDots\r\n                  className=\"comments-blogs\"\r\n                  color=\"#fff\"\r\n                  size={30}\r\n                />\r\n\r\n                <p>{posts[0]._links.replies[0].count}</p>\r\n              </Link>\r\n            )}\r\n\r\n            {posts[1] && posts[1]._embedded[\"wp:featuredmedia\"][0] && (\r\n              <div className=\"featured-blog-banner-inner-container-second\">\r\n                <Link\r\n                  to={`/blogNewPage?id=${posts[1].id}`}\r\n                  style={{\r\n                    backgroundImage: `url(${\r\n                      posts[1]\r\n                        ? posts[1]._embedded[\"wp:featuredmedia\"][0]\r\n                            .media_details.sizes.medium_large.source_url\r\n                        : \"https://res.cloudinary.com/dx3u24xir/image/upload/f_auto,q_auto/v1692792133/Blogs/Featured-Blog-Banner/Book1_avjadw.webp\"\r\n                    })`,\r\n                  }}\r\n                  className=\"featured-blog-banner-inner-container-second-first-blog\"\r\n                >\r\n                  <div className=\"read-more-div\">\r\n                    <h2>Read more...</h2>\r\n                  </div>\r\n\r\n                  <h4>{posts[1] && convertDate(posts[1].date)}</h4>\r\n\r\n                  <FaRegCommentDots\r\n                    className=\"comments-blogs\"\r\n                    color=\"#fff\"\r\n                    size={30}\r\n                  />\r\n\r\n                  <p>{posts[1]._links.replies[0].count}</p>\r\n                </Link>\r\n\r\n                {posts[2] && posts[2]._embedded[\"wp:featuredmedia\"][0] && (\r\n                  <div className=\"featured-blog-banner-inner-container-second-second-blog\">\r\n                    <div className=\"featured-blog-banner-inner-container-second-second-blog-one\">\r\n                      <div className=\"read-more-div\">\r\n                        <h2>Read more</h2>\r\n                      </div>\r\n\r\n                      <h4>{posts[2] && convertDate(posts[2].date)}</h4>\r\n\r\n                      <FaRegCommentDots\r\n                        className=\"comments-blogs\"\r\n                        color=\"#fff\"\r\n                        size={20}\r\n                      />\r\n\r\n                      <p>{posts[2]._links.replies[0].count}</p>\r\n                    </div>\r\n\r\n                    {posts[3] && posts[3]._embedded[\"wp:featuredmedia\"][0] && (\r\n                      <div className=\"featured-blog-banner-inner-container-second-second-blog-two\">\r\n                        <div className=\"read-more-div\">\r\n                          <h2>Read more</h2>\r\n                          <BiRightArrowAlt\r\n                            color=\"#fff\"\r\n                            size={35}\r\n                            className=\"read-more-icon\"\r\n                          />\r\n                        </div>\r\n\r\n                        <h4>{posts[3] && convertDate(posts[3].date)}</h4>\r\n\r\n                        <FaRegCommentDots\r\n                          className=\"comments-blogs\"\r\n                          color=\"#fff\"\r\n                          size={20}\r\n                        />\r\n\r\n                        <p>{posts[3]._links.replies[0].count}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: \"30px\"\r\n            }}\r\n          >\r\n            <MdSignalWifiConnectedNoInternet0 color={\"#612d91\"} size={200} />\r\n            <h2>Cannot load blogs. You are not connected to the internet</h2>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Navbar from \"../components/genral_components/Navbar/Navbar\";\r\n\r\nimport Footer from \"../components/genral_components/Footer/Footer\";\r\n\r\n// The design and coding for the intial blog card is included in blog main.\r\n//When the user clicks on the blog card then the detailed blog will open.\r\nimport BlogMain from \"../components/blog-page-components/Blog-main/BlogMain\";\r\n\r\nimport \"./Blog.css\";\r\n\r\nimport FeaturedBlogBanner from \"../components/blog-page-components/Featured-blog-page/FeaturedBlogBanner\";\r\n\r\nexport default function Blog() {\r\n\r\n  return (\r\n    <div className=\"blogs-main-container\">\r\n      <Navbar />\r\n\r\n      <FeaturedBlogBanner/>\r\n\r\n      <BlogMain />\r\n\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["BlogMain","_useState","useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","setPostsLength","_useState5","_useState6","errorMsg","setErrorMessage","useEffect","axios","get","then","response","data","length","catch","error","_useState7","Array","fill","_useState8","expansions","setExpansions","toggleExpansion","index","prevExpansions","updatedExpansions","_toConsumableArray","_jsx","children","_jsxs","_Fragment","className","map","element","featuredImageUrl","date","apiDate","dateObject","Date","day","getDate","month","getMonth","year","getFullYear","concat","formatDate","_embedded","media_details","sizes","medium_large","source_url","style","backgroundImage","title","rendered","dangerouslySetInnerHTML","__html","content","excerpt","AiFillMinusCircle","color","size","onClick","AiFillPlusCircle","Link","to","target","MdOpenInNew","InfinitySpin","height","width","radius","ariaLabel","wrapperStyle","wrapperClass","MdSignalWifiConnectedNoInternet0","FeaturedBlogBanner","console","log","convertDate","toLocaleDateString","id","full","FaRegCommentDots","_links","replies","count","BiRightArrowAlt","display","flexDirection","alignItems","justifyContent","padding","Blog","Navbar","Footer"],"sourceRoot":""}