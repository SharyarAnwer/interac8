{"version":3,"file":"static/js/264.1a93593c.chunk.js","mappings":"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","sources":["components/blog-page-components/Blog-main/BlogMain.js","blog/Blog.js","templates/maincategories/maincategoriesbanner/MainCategoriesBanner.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./BlogMain.css\";\r\n\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\n\r\nimport { AiFillMinusCircle } from \"react-icons/ai\";\r\n\r\nimport { MdOpenInNew } from \"react-icons/md\";\r\n\r\nimport backUpImage from './test.jpg'\r\n\r\nexport default function BlogMain() {\r\n  // This piece of code fetches the post from wordpress and saves it in the variable post.\r\n  // Axios is a third party package that was used to fetch the data from wordpress.\r\n  // Data from wordpress is coming in form of an array which contains object. Each object is a single wordpress post.\r\n  //You can run this \"https://dev-interac8digital.pantheonsite.io/wp-json/wp/v2/posts\" in thunder client to see the response we are getting from wordpress\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // let url = \"https://dev-interac8digital.pantheonsite.io/wp-json/wp/v2/posts\";\r\n    let url =\r\n      \"https://dev-interac8digital.pantheonsite.io/wp-json/wp/v2/posts?_embed\";\r\n\r\n    axios.get(url).then((response) => {\r\n      console.log(response.data);\r\n      setPosts(response.data);\r\n      // setPosts(response.data[0].content.rendered);\r\n    });\r\n    \r\n  }, []);\r\n\r\n  // Wordpress API sends us the date in this format: \"2023-07-24T11:50:07\".\r\n  //We want date to be in this format: \"24/7/2023\"\r\n  //So the \"formatDate\" function will convert \"2023-07-24T11:50:07\" to \"24/7/2023\"\r\n  function formatDate(apiDate) {\r\n    const dateObject = new Date(apiDate);\r\n    const day = dateObject.getDate();\r\n    const month = dateObject.getMonth() + 1; // Months are zero-indexed, so we add 1 to get the correct month number\r\n    const year = dateObject.getFullYear();\r\n\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  // Create an array of boolean values to track the expansion state of each card\r\n  const [expansions, setExpansions] = useState(Array(5).fill(false));\r\n\r\n  // Function to toggle the expansion state of a specific card. This piece of code makes sure that only the card which is clicked will open or close. Rest of the cards will not change.\r\n  //Code was copied from chatGPT, so good luck understanding it because I don't understand it either.\r\n  const toggleExpansion = (index) => {\r\n    setExpansions((prevExpansions) => {\r\n      const updatedExpansions = [...prevExpansions];\r\n      updatedExpansions[index] = !updatedExpansions[index];\r\n      return updatedExpansions;\r\n    });\r\n  };\r\n\r\n  // Function to open the post in a new page\r\n  const openPostInNewPage = (id) => {\r\n\r\n    // When the user clicks on the 'Open in new tab' button, the clicked post opens up in the new tab\r\n    //There is a problem here. Since we are opening the 'BlogsNewPage' component in new page, we cannot pass props to this component as we normally do.\r\n    //To solve this issue we send the post details in the form of URL.\r\n\r\n    //if you have a better idea, please feel free to implement that.\r\n\r\n    const data = {\r\n      id: id,\r\n    };\r\n\r\n    const encodedData = encodeURIComponent(JSON.stringify(data));\r\n    // Replace 'urlToOpen' with the URL you want to open in the new tab\r\n    const urlToOpen = `/blogNewPage#${encodedData}`;\r\n    // const urlToOpen = \"/blogNewPage\";\r\n\r\n    // Open the URL in a new tab\r\n    window.open(urlToOpen, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-card-main-container\">\r\n      {/* posts.map will take the array of Posts and it will go through each item in the array. So, for example, if you get 4 posts from wordpress, the loop will automatically run 4 times and will print 4 cards along with their information. */}\r\n      {posts.map((element, index) => {\r\n        let date = formatDate(element.date);\r\n\r\n        let featuredImageUrl\r\n\r\n        try {\r\n          // Extract the featured image URL\r\n          featuredImageUrl =\r\n            element._embedded[\"wp:featuredmedia\"][0].media_details.sizes.medium\r\n              .source_url;\r\n        } catch (error) {\r\n          featuredImageUrl = backUpImage\r\n        }\r\n\r\n        return (\r\n          <div key={index} className=\"blog-card-container\">\r\n            <div\r\n              className=\"blog-card-container-image\"\r\n              style={{ backgroundImage: `url(${featuredImageUrl})` }}\r\n            ></div>\r\n\r\n            <div className=\"blog-card-container-date\">Posted on: {date}</div>\r\n\r\n            <div className=\"blog-card-container-title\">\r\n              <h2>{element.title.rendered}</h2>\r\n            </div>\r\n\r\n            <div\r\n              className={`blog-card-container-content ${\r\n                expansions[index] ? \"expanded\" : \"\"\r\n              }`}\r\n            >\r\n              <span\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `${\r\n                    !expansions[index]\r\n                      ? element.excerpt.rendered\r\n                      : element.content.rendered\r\n                  }`,\r\n                }}\r\n              ></span>\r\n\r\n              {!expansions[index] ? (\r\n                <AiFillPlusCircle\r\n                  color={\"#612d91\"}\r\n                  size={30}\r\n                  className=\"blog-plus-sign\"\r\n                  onClick={() => {\r\n                    toggleExpansion(index); // Call the toggleExpansion function with the index of the clicked card\r\n                  }}\r\n                />\r\n              ) : (\r\n                <AiFillMinusCircle\r\n                  color={\"#612d91\"}\r\n                  size={30}\r\n                  className=\"blog-plus-sign\"\r\n                  onClick={() => {\r\n                    toggleExpansion(index); // Call the toggleExpansion function with the index of the clicked card\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"blog-card-container-button\">\r\n              <button onClick={() => openPostInNewPage(element.id)}>\r\n                Open in new tab <MdOpenInNew color={\"#fff\"} size={20} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Navbar from \"../components/genral_components/Navbar/Navbar\";\r\n\r\nimport Banner from \"../templates/maincategories/maincategoriesbanner/MainCategoriesBanner\";\r\n\r\nimport Footer from \"../components/genral_components/Footer/Footer\";\r\n\r\n// The design and coding for the intial blog card is included in blog main.\r\n//When the user clicks on the blog card then the detailed blog will open.\r\nimport BlogMain from \"../components/blog-page-components/Blog-main/BlogMain\";\r\n\r\nimport BlogPageBanner from \"./BlogPageBanner.webp\";\r\n\r\nimport \"./Blog.css\";\r\n\r\nexport default function Blog() {\r\n\r\n  return (\r\n    <div className=\"blogs-main-container\">\r\n      <Navbar />\r\n\r\n      <Banner bannerBackgroundImage={BlogPageBanner} />\r\n\r\n      <BlogMain />\r\n\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./MainCategoriesBanner.css\";\r\n\r\n// import background from \"./designingWebsites.jpg\"\r\n\r\nexport default function MainCategoriesBanner(prop) {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`main-categories-page-banner slide-in ${\r\n          isMounted ? \"slide-in-active\" : \"\"\r\n        }`}\r\n\r\n        style={{ backgroundImage: `url(${prop.bannerBackgroundImage})` }}\r\n      >\r\n        <div className=\"main-categories-banner-content-1\">\r\n          <div>\r\n            <h1>{prop.heading}</h1>\r\n\r\n            <h3>\r\n              {prop.paragraph}\r\n            </h3>\r\n\r\n            <div className=\"main-categories-banner-content-1-buttons\">\r\n              <button>{prop.button1}</button>\r\n              <button>{prop.button2}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main-categories-banner-content-2\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["BlogMain","_useState","useState","_useState2","_slicedToArray","posts","setPosts","useEffect","axios","get","then","response","console","log","data","_useState3","Array","fill","_useState4","expansions","setExpansions","toggleExpansion","index","prevExpansions","updatedExpansions","_toConsumableArray","_jsx","className","children","map","element","featuredImageUrl","date","apiDate","dateObject","Date","day","getDate","month","getMonth","year","getFullYear","concat","formatDate","_embedded","media_details","sizes","medium","source_url","error","backUpImage","_jsxs","style","backgroundImage","title","rendered","dangerouslySetInnerHTML","__html","content","excerpt","AiFillMinusCircle","color","size","onClick","AiFillPlusCircle","id","encodedData","encodeURIComponent","JSON","stringify","urlToOpen","window","open","openPostInNewPage","MdOpenInNew","Blog","Navbar","Banner","bannerBackgroundImage","BlogPageBanner","Footer","MainCategoriesBanner","prop","isMounted","setIsMounted","heading","paragraph","button1","button2"],"sourceRoot":""}